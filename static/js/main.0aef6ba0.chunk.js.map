{"version":3,"sources":["Components/Phonebook.js","Components/ContactList.js","Components/Filter.js","App.js","index.js"],"names":["Phonebook","state","name","phone","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","type","pattern","onChange","title","required","Component","ContactList","contactitems","map","contactitem","onClick","onDeleteContact","id","Filter","App","contacts","filter","forSubmiHandler","data","item","shortid","generate","prevState","onFilterChange","getVisibleContact","normalizaedFilter","toLowerCase","contact","includes","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAqDeA,E,4MAlDbC,MAAQ,CACNC,KAAM,GACNC,MAAO,I,EAETC,aAAe,SAACC,GACd,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAE1BE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,OACzB,EAAKa,S,EAEPA,MAAQ,WACN,EAAKN,SAAS,CAAEN,KAAM,GAAIC,MAAO,M,4CAEnC,WACE,OACE,mCACE,uBAAMU,SAAUE,KAAKN,aAArB,UACE,uDAEE,uBACEO,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRV,MAAOQ,KAAKd,MAAMC,KAClBgB,SAAUH,KAAKX,aACfe,MAAM,kcACNC,UAAQ,IATZ,QAYE,uBACEJ,KAAK,OACLd,KAAK,QACLK,MAAOQ,KAAKd,MAAME,MAClBe,SAAUH,KAAKX,aACfe,MAAM,kcACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,kC,GA1CcK,aC+BTC,E,4JA9Bb,WAAU,IAAD,OACP,OACE,mCACE,8BACE,6BACGP,KAAKH,MAAMW,aAAaC,KAAI,SAACC,GAAD,OAC3B,+BACE,yCACQA,EAAYvB,KADpB,UACiCuB,EAAYtB,SAE7C,wBACEa,KAAK,SACLU,QAAS,kBAAM,EAAKd,MAAMe,gBAAgBF,EAAYG,KAFxD,0DAJOH,EAAYG,iB,GAPTP,aCWXQ,MAXf,YAAsC,IAApBtB,EAAmB,EAAnBA,MAAOW,EAAY,EAAZA,SACvB,OACE,yEACQ,uBAAOF,KAAK,OAAOT,MAAOA,EAAOW,SAAUA,Q,iBCqDxCY,E,4MAnDb7B,MAAQ,CACN8B,SAAU,CACR,CAAEH,GAAI,OAAQ1B,KAAM,gBAAiBC,MAAO,aAC5C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,MAAO,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,gBAAiBC,MAAO,aAC5C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,MAAO,cAE/C6B,OAAQ,I,EAEVC,gBAAkB,SAACC,GACjB,IAAMC,EAAI,aACRP,GAAIQ,IAAQC,YACTH,GAEL,EAAK1B,UAAS,SAAC8B,GAAD,MAAgB,CAC5BP,SAAS,GAAD,mBAAMO,EAAUP,UAAhB,CAA0BI,S,EAGtCI,eAAiB,SAAC7B,GAChB,EAAKF,SAAS,CAAEwB,OAAQtB,EAAEJ,cAAcC,S,EAE1CiC,kBAAoB,WAClB,MAA6B,EAAKvC,MAA1B+B,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SACVU,EAAoBT,EAAOU,cACjC,OAAOX,EAASC,QAAO,SAACW,GAAD,OACrBA,EAAQzC,KAAKwC,cAAcE,SAASH,O,EAGxCd,gBAAkB,SAACC,GACjB,EAAKpB,UAAS,SAAC8B,GAAD,MAAgB,CAC5BP,SAAUO,EAAUP,SAASC,QAAO,SAACW,GAAD,OAAaA,EAAQf,KAAOA,U,4CAIpE,WACE,IAAMiB,EAAiB9B,KAAKyB,oBAC5B,OACE,qCACE,2CACA,cAAC,EAAD,CAAW3B,SAAUE,KAAKkB,kBAC1B,cAAC,EAAD,CAAQ1B,MAAOQ,KAAKd,MAAM+B,OAAQd,SAAUH,KAAKwB,iBACjD,0CACA,cAAC,EAAD,CACEhB,aAAcsB,EACdlB,gBAAiBZ,KAAKY,yB,GA7CdN,aCAlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0aef6ba0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass Phonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", phone: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n            Phone\r\n            <input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nPhonebook.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\nexport default Phonebook;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <ul>\r\n            {this.props.contactitems.map((contactitem) => (\r\n              <li key={contactitem.id}>\r\n                <span>\r\n                  Name:{contactitem.name} Phone:{contactitem.phone}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.props.onDeleteContact(contactitem.id)}\r\n                >\r\n                  Удалить\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContactList.propTypes = {\r\n  contactitems: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    phone: PropTypes.string,\r\n  }),\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      Фильтр<input type=\"text\" value={value} onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\nexport default Filter;\r\n","import \"./App.css\";\r\nimport Phonebook from \"./Components/Phonebook\";\r\nimport React, { Component } from \"react\";\r\nimport ContactList from \"./Components/ContactList\";\r\nimport Filter from \"./Components/Filter\";\r\nimport shortid from \"shortid\";\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n  forSubmiHandler = (data) => {\r\n    const item = {\r\n      id: shortid.generate(),\r\n      ...data,\r\n    };\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, item],\r\n    }));\r\n  };\r\n  onFilterChange = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n  getVisibleContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizaedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizaedFilter)\r\n    );\r\n  };\r\n  onDeleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const visibleContact = this.getVisibleContact();\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <Phonebook onSubmit={this.forSubmiHandler}></Phonebook>\r\n        <Filter value={this.state.filter} onChange={this.onFilterChange} />\r\n        <h2>Contacts</h2>\r\n        <ContactList\r\n          contactitems={visibleContact}\r\n          onDeleteContact={this.onDeleteContact}\r\n        ></ContactList>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}